2021
(还有3个需求没有排期)
2021/9/27-2021/9/29 【京喜迁移】京喜用户分层接定投/[LC]lowcode商品组权限全量开放
2021/9/30-2021/10/08 营销中心项目930版本-新增素材相关选品指标 
2021/10/08-2021/10/12 【双11大促】PLUS神券可用商品池
2021/10/19-2021/10/21 【首页核心楼层】新品频道下发商品利益点


技术规划：
在不同的阶段都会遇到不同的问题，有紧急的、有不紧急的。找出痛点，坑点：
1）每个人一个代码风格，团队协作会很受影响；
2）一套代码审查机制，还有自动化机制。
3）定期总结
4）及时调整

618总结
今年618大促分为5个阶段，第一阶段为预售期，从5月23日晚上8点开始；
第二阶段为开门红，从5月31日晚上8点开始至6月3日；
第三阶段的场景期，6月4日开始至6月15日；
第四阶段为高潮期，6月15日晚上8点开始至6月18日；
五阶段为返场期，从6月19日开始。
在本次大促中我们团队体现的一些现象值得复盘一下，首先在开门空包括数次军演压测中，压的量比历年的大促都高，
最高峰值在5月13日凌晨，素材中心qps在44.55w，soa qps在134.7w。展示出来的问题（除却上游问题），集中在素材中心机器CPU打满，GC频繁，调用量太高导致线程池打满，JIMDB热key上。
在618实战中最高峰值在6月17日20:00，素材中心qps上升到121.5w，soa qps在100w。通过扩容、关闭Pfinder等一些策略在617晚20点抗住了百万qps。
所以扩容横向拓展从机器的CPU使用率来看，是有显著提升的，也证明了我们系统的可伸缩性较强，Scale Out效果明显。
从排查问题中看此次大促，有以下几点：
1.（日志层面）（1）查询问题的时候，一些无用日志打的有些多，影响查看需要排查的问题的效率。可以把无需排查问题的冗余日志剔除，亦或加写日志开关，有需打开。
（2）有些异常可以catch的时候更细粒度一些，主要体现在一些老的代码，这块可以看着优化一下。
2.（代码层面）（1）作为入职的新人来看，素材中心代码新老代码交替（lowcode、老的），学习成本较高，排查问题在业务没有描述清楚问题时，也不知道去哪查，导致新人查问题特别耗时（2）我们配置端的上游接口和实时接口的上游接口，其实很多时候需要的内容是一致的，但是我们接入的话需要接两次，开发、学习成本都较高，或许可以考虑把这些上游接口方法的出入参package部分封装起来共用 （3）感觉查一些算法did问题的时候，去平台查同步的did，不太好找，平台做的也很难用，可以考虑写一个查询的参考文档
